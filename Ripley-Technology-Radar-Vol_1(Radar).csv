name,ring,quadrant,isNew,status,description
GO,Adopt,Languages&Frameworks,FALSE,no change,<p>El lenguaje de programación Go es un proyecto de código abierto para hacer que los programadores sean más productivos. Go es expresivo, conciso, limpio y eficiente. Sus mecanismos de concurrencia facilitan la escritura de programas que aprovechan al máximo las máquinas multinúcleo y en red, mientras que su novedoso sistema de tipos permite la construcción de programas flexible y modular. Go compila rápidamente en código de máquina, pero tiene la comodidad de la recolección de basura y el poder de la reflexión en tiempo de ejecución. Es un lenguaje compilado, rápido y de tipado estático que se siente como un lenguaje interpretado y de tipado dinámico.</p>
Python,Adopt,Languages&Frameworks,FALSE,no change,
Node TS,Adopt,Languages&Frameworks,FALSE,no change,
Java Quarkus,Adopt,Languages&Frameworks,FALSE,no change,
R,Adopt,Languages&Frameworks,FALSE,no change,
Next.js,Adopt,Languages&Frameworks,FALSE,no change,
React,Adopt,Languages&Frameworks,FALSE,no change,
Express,Adopt,Languages&Frameworks,FALSE,no change,
GraphQL,Hold,Languages&Frameworks,FALSE,no change,
Storybook,Adopt,Languages&Frameworks,FALSE,no change,
CloudEvents,Adopt,Platforms,FALSE,no change,"<p>Los eventos son mecanismos comunes en la arquitectura basada en eventos o en aplicaciones sin servidor. Sin embargo, los productores o proveedores de la nube tienden a admitirlos en diferentes formas, lo que impide la interoperabilidad entre plataformas e infraestructuras. <strong><a href=""https://cloudevents.io/"">CloudEvents</a></strong> es una especificación para describir datos de eventos en formatos comunes para proporcionar interoperabilidad entre servicios, plataformas y sistemas. Proporciona SDK en varios idiomas para que pueda integrar la especificación en su aplicación o cadena de herramientas. Nuestros equipos lo utilizan no solo para fines de plataformas de nube cruzada, sino también para la especificación de eventos de dominio, entre otros escenarios. CloudEvents está alojado por la <a href=""https://www.cncf.io/"">Cloud Native Computing Foundation</a> (CNCF) y ahora es un proyecto graduado. Nuestros equipos utilizan CloudEvents de manera predeterminada para crear arquitecturas basadas en eventos y, por ese motivo, lo estamos trasladando a Adopt.</p>"
GitHub Copilot,Trial,Tools,FALSE,no change,"<p>Si bien el mercado de asistencia de codificación de IA está cada vez más concurrido, <strong><a href=""https://github.com/features/copilot"">GitHub Copilot</a></strong> sigue siendo nuestra opción predeterminada y muchos de nuestros equipos la utilizan. Desde la última vez que escribimos sobre GitHub Copilot, las mejoras más interesantes se produjeron en la función de chat. Por ejemplo, ya no es necesario saturar el código con comentarios como indicaciones"
Continuous compliance,Adopt,Techniques,FALSE,no change,"<p><strong>El cumplimiento continuo</strong> es la práctica de garantizar que los procesos y las tecnologías de desarrollo de software cumplan con las normas de seguridad y las regulaciones de la industria de manera continua, mediante el uso intensivo de la automatización. La verificación manual de vulnerabilidades de seguridad y el cumplimiento de las regulaciones pueden ralentizar el desarrollo y generar errores. Como alternativa, las organizaciones pueden automatizar las comprobaciones y auditorías de cumplimiento. Pueden integrar herramientas en los procesos de desarrollo de software, lo que permite a los equipos detectar y abordar problemas de cumplimiento en las primeras etapas del proceso de desarrollo. La codificación de las reglas de cumplimiento y las mejores prácticas ayuda a aplicar políticas y estándares de manera uniforme en todos los equipos. Le permite escanear los cambios de código en busca de vulnerabilidades, aplicar estándares de codificación y realizar un seguimiento de los cambios de configuración de la infraestructura para garantizar que cumplan con los requisitos de cumplimiento. Por último, la generación automática de informes de lo anterior simplifica las auditorías y proporciona evidencia clara de cumplimiento. Ya hemos hablado de técnicas como la publicación de SBOM y la aplicación de las recomendaciones de SLSA, pueden ser muy buenos puntos de partida. Los beneficios de esta técnica son múltiples. En primer lugar, la automatización conduce a un software más seguro al identificar y mitigar las vulnerabilidades de forma temprana y, en segundo lugar, los ciclos de desarrollo se aceleran a medida que se eliminan las tareas manuales. La reducción de costos y la mejora de la consistencia son ventajas adicionales. Para las industrias críticas para la seguridad, como los vehículos impulsados ??por software, el cumplimiento continuo automatizado puede mejorar la eficiencia y la confiabilidad del proceso de certificación, lo que en última instancia conduce a vehículos más seguros y confiables en la carretera.</p>"
Jira,Adopt,Tools,FALSE,no change,
SonarQube,Adopt,Tools,FALSE,no change,
Swagger/OpenAPI,Adopt,Tools,FALSE,no change,
Docker,Adopt,Platforms,FALSE,no change,
Kubernetes,Adopt,Platforms,FALSE,no change,
Redis,Adopt,Platforms,FALSE,no change,
PostgreSQL,Adopt,Platforms,FALSE,no change,
MongoDB Atlas Database,Adopt,Platforms,FALSE,no change,
Cloud Native,Adopt,Techniques,FALSE,no change,
DevOps,Adopt,Techniques,FALSE,no change,
Scrum,Adopt,Techniques,FALSE,no change,
Microservices,Adopt,Techniques,FALSE,no change,
Figma,Adopt,Tools,FALSE,no change,<p>Figma es un editor de gráficos vectorial y una herramienta de generación de prototipos, principalmente basada en la web, con características off-line adicionales habilitadas por aplicaciones de escritorio en macOS y Windows. Las aplicaciones Figma Mirror companion para Android y iOS permiten mirar los prototipos de Figma en dispositivos móviles.? El conjunto de funciones de Figma, se enfoca en el uso de la interfaz de usuario y el diseño de experiencia de usuario, con énfasis en la colaboración en tiempo real.</p>
